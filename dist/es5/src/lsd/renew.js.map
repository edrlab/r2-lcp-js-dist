{"version":3,"file":"renew.js","sourceRoot":"","sources":["../../../../src/lsd/renew.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\nimport * as debug_ from \"debug\";\nimport * as request from \"request\";\nimport * as requestPromise from \"request-promise-native\";\n\nimport { IDeviceIDManager } from \"./deviceid-manager\";\n\nimport URI = require(\"urijs\");\nimport URITemplate = require(\"urijs/src/URITemplate\");\n\nconst debug = debug_(\"r2:lcp#lsd/renew\");\n\nexport async function lsdRenew(\n    end: Date | undefined,\n    lsdJson: any,\n    deviceIDManager: IDeviceIDManager): Promise<any> {\n\n    if (!lsdJson.links) {\n        return Promise.reject(\"No LSD links!\");\n    }\n\n    const licenseRenew = lsdJson.links.find((link: any) => {\n        return link.rel === \"renew\";\n    });\n    if (!licenseRenew) {\n        return Promise.reject(\"No LSD renew link!\");\n    }\n\n    let deviceID: string;\n    try {\n        deviceID = await deviceIDManager.getDeviceID();\n    } catch (err) {\n        debug(err);\n        return Promise.reject(\"Problem getting Device ID !?\");\n    }\n\n    let deviceNAME: string;\n    try {\n        deviceNAME = await deviceIDManager.getDeviceNAME();\n    } catch (err) {\n        debug(err);\n        return Promise.reject(\"Problem getting Device NAME !?\");\n    }\n\n    let renewURL = licenseRenew.href;\n    if (licenseRenew.templated === true || licenseRenew.templated === \"true\") {\n        const urlTemplate = new URITemplate(renewURL);\n        renewURL = (urlTemplate as any).expand({ end: \"xxx\", id: deviceID, name: deviceNAME }, { strict: false });\n\n        const renewURI = new URI(renewURL);\n        renewURI.search((data: any) => {\n            // overrides existing (leaves others intact)\n            data.end = end; // can be undefined\n        });\n        renewURL = renewURI.toString();\n\n        // url = url.replace(\"{?end,id,name}\", \"\"); // TODO: smarter regexp?\n        // url = new URI(url).setQuery(\"id\", deviceID).setQuery(\"name\", deviceNAME).toString();\n    }\n    debug(\"RENEW: \" + renewURL);\n\n    return new Promise<any>(async (resolve, reject) => {\n\n        const failure = (err: any) => {\n            reject(err);\n        };\n\n        const success = async (response: request.RequestResponse) => {\n\n            Object.keys(response.headers).forEach((header: string) => {\n                debug(header + \" => \" + response.headers[header]);\n            });\n\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                failure(\"HTTP CODE \" + response.statusCode);\n                return;\n            }\n\n            let responseData: Buffer;\n            try {\n                responseData = await streamToBufferPromise(response);\n            } catch (err) {\n                reject(err);\n                return;\n            }\n            const responseStr = responseData.toString(\"utf8\");\n            debug(responseStr);\n            const responseJson = global.JSON.parse(responseStr);\n            debug(responseJson);\n\n            resolve(responseJson);\n        };\n\n        const headers = {\n            \"Accept-Language\": \"en-UK,en-US;q=0.7,en;q=0.5\",\n        };\n\n        // No response streaming! :(\n        // https://github.com/request/request-promise/issues/90\n        const needsStreamingResponse = true;\n        if (needsStreamingResponse) {\n            request.put({\n                headers,\n                method: \"PUT\",\n                uri: renewURL,\n            })\n                .on(\"response\", success)\n                .on(\"error\", failure);\n        } else {\n            let response: requestPromise.FullResponse;\n            try {\n                // tslint:disable-next-line:await-promise no-floating-promises\n                response = await requestPromise({\n                    headers,\n                    method: \"PUT\",\n                    resolveWithFullResponse: true,\n                    uri: renewURL,\n                });\n            } catch (err) {\n                failure(err);\n                return;\n            }\n\n            await success(response);\n        }\n    });\n}\n"]}